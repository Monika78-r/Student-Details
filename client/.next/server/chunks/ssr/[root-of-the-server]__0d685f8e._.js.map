{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///D:/Aerele/website/client/src/app/utils/api.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = axios.create({\r\n  baseURL: \"http://localhost:8000\",\r\n});\r\n\r\nexport default API;\r\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,MAAM,qIAAA,CAAA,UAAK,CAAC,MAAM,CAAC;IACvB,SAAS;AACX;uCAEe","debugId":null}},
    {"offset": {"line": 130, "column": 0}, "map": {"version":3,"sources":["file:///D:/Aerele/website/client/src/app/page.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect, useState } from \"react\";\nimport API from \"./utils/api\";\n\nexport default function Page() {\n  type User = {\n    _id: string;\n    name: string;\n    email: string;\n    age: number;\n  };\n\n  const [users, setUsers] = useState<User[]>([]);\n  const [form, setForm] = useState({\n    name: \"\",\n    email: \"\",\n    age: \"\",\n  });\n  const [editingId, setEditingId] = useState<string | null>(null);\n\n  // Fetch users\n  const fetchUsers = async () => {\n    try {\n      const res = await API.get(\"/users\");\n      setUsers(res.data);\n    } catch (err) {\n      console.error(\"Error fetching users:\", err);\n    }\n  };\n\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  // Create or update user\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    try {\n      const payload = { ...form, age: Number(form.age) };\n      if (editingId) {\n        await API.put(`/users/${editingId}`, payload);\n        setEditingId(null);\n      } else {\n        await API.post(\"/users\", payload);\n      }\n      setForm({ name: \"\", email: \"\", age: \"\" });\n      fetchUsers();\n    } catch (err) {\n      console.error(\"Error saving user:\", err);\n    }\n  };\n\n  // Delete user\n  const deleteUser = async (id: string) => {\n    try {\n      await API.delete(`/users/${id}`);\n      fetchUsers();\n    } catch (err) {\n      console.error(\"Error deleting user:\", err);\n    }\n  };\n\n  // Edit user\n  const editUser = (user: User) => {\n    setEditingId(user._id); // <-- use _id\n    setForm({\n      name: user.name,\n      email: user.email,\n      age: user.age.toString(),\n    });\n  };\n\n  return (\n    <div>\n      <h1>User Management</h1>\n      \n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Name\"\n          value={form.name}\n          onChange={(e) => setForm({ ...form, name: e.target.value })}\n          required\n        />\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={form.email}\n          onChange={(e) => setForm({ ...form, email: e.target.value })}\n          required\n        />\n        <input\n          type=\"number\"\n          placeholder=\"Age\"\n          value={form.age}\n          onChange={(e) => setForm({ ...form, age: e.target.value })}\n          required\n        />\n        <button type=\"submit\">{editingId ? \"Update\" : \"Create\"}</button>\n        {editingId && (\n          <button\n            type=\"button\"\n            onClick={() => {\n              setEditingId(null);\n              setForm({ name: \"\", email: \"\", age: \"\" });\n            }}\n          >\n            Cancel\n          </button>\n        )}\n      </form>\n\n      <ul>\n        {users.map((user) => (\n          <li key={user._id}>\n            {user.name} - {user.email} - {user.age}\n            <button onClick={() => editUser(user)}>Edit</button>\n            <button onClick={() => deleteUser(user._id)}>Delete</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}}]
}